{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adem Macic\\\\Desktop\\\\Weather app (task za agilno)\\\\meteoApp\\\\src\\\\ui\\\\VariablesGraph.js\";\nimport { LineChart, XAxis, YAxis, CartesianGrid, Line, Tooltip, Legend, ResponsiveContainer } from \"recharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VariablesGraph = props => {\n  const lines = [];\n\n  // Generirajte 20 različitih boja koristeći HSV sustav boja\n  const colors = [];\n  for (let i = 0; i < 20; i++) {\n    const hue = i * 360 / 20; // Ravnomjerno raspoređeni tonovi\n    const saturation = 90; // Zasićenost\n    const value = 70; // Svjetlina\n    const color = `hsl(${hue}, ${saturation}%, ${value}%)`;\n    colors.push(color);\n  }\n\n  // Iterirajte kroz sve dostupne nizove pored niza \"time\"\n  if (props.variables.hourly) {\n    Object.keys(props.variables.hourly).forEach((key, index) => {\n      if (key !== \"time\") {\n        // Kreirajte podatke za trenutni niz\n        const data = props.variables.hourly.time.map((time, dataIndex) => ({\n          x: time,\n          [key]: props.variables.hourly[key][dataIndex]\n        }));\n\n        // Dodijelite boju trenutnoj liniji\n        const color = colors[index % colors.length];\n\n        // Dodajte liniju za trenutni niz s određenom bojom\n        lines.push( /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: key,\n          name: key,\n          data: data,\n          stroke: color\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this));\n      }\n    });\n  }\n  if (props.variables.daily) {\n    Object.keys(props.variables.daily).forEach((key, index) => {\n      if (key !== \"time\") {\n        // Kreirajte podatke za trenutni dnevni niz\n        const data = props.variables.daily.time.map((time, dataIndex) => ({\n          x: time,\n          [key]: props.variables.daily[key][dataIndex]\n        }));\n\n        // Dodijelite boju trenutnoj dnevnoj liniji\n        const color = colors[(index + lines.length) % colors.length];\n\n        // Dodajte liniju za trenutni dnevni niz s određenom bojom\n        lines.push( /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: key,\n          name: key,\n          data: data,\n          stroke: color\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this));\n      }\n    });\n  }\n  // Iterirajte kroz sve dostupne nizove pored niza \"time\" za dnevne podatke\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      textAlign: \"center\",\n      marginTop: \"10px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"90%\",\n      height: 500,\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        data: props.variables.hourly.time,\n        children: [/*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n          stroke: \"#ccc\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), lines, /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_c = VariablesGraph;\nexport default VariablesGraph;\nvar _c;\n$RefreshReg$(_c, \"VariablesGraph\");","map":{"version":3,"names":["LineChart","XAxis","YAxis","CartesianGrid","Line","Tooltip","Legend","ResponsiveContainer","VariablesGraph","props","lines","colors","i","hue","saturation","value","color","push","variables","hourly","Object","keys","forEach","key","index","data","time","map","dataIndex","x","length","daily","display","textAlign","marginTop"],"sources":["C:/Users/Adem Macic/Desktop/Weather app (task za agilno)/meteoApp/src/ui/VariablesGraph.js"],"sourcesContent":["import {\r\n  LineChart,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Line,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\n\r\nconst VariablesGraph = (props) => {\r\n  const lines = [];\r\n\r\n  // Generirajte 20 različitih boja koristeći HSV sustav boja\r\n  const colors = [];\r\n  for (let i = 0; i < 20; i++) {\r\n    const hue = (i * 360) / 20; // Ravnomjerno raspoređeni tonovi\r\n    const saturation = 90; // Zasićenost\r\n    const value = 70; // Svjetlina\r\n    const color = `hsl(${hue}, ${saturation}%, ${value}%)`;\r\n    colors.push(color);\r\n  }\r\n\r\n  // Iterirajte kroz sve dostupne nizove pored niza \"time\"\r\n  if (props.variables.hourly) {\r\n    Object.keys(props.variables.hourly).forEach((key, index) => {\r\n      if (key !== \"time\") {\r\n        // Kreirajte podatke za trenutni niz\r\n        const data = props.variables.hourly.time.map((time, dataIndex) => ({\r\n          x: time,\r\n          [key]: props.variables.hourly[key][dataIndex],\r\n        }));\r\n\r\n        // Dodijelite boju trenutnoj liniji\r\n        const color = colors[index % colors.length];\r\n\r\n        // Dodajte liniju za trenutni niz s određenom bojom\r\n        lines.push(\r\n          <Line\r\n            key={key}\r\n            type=\"monotone\"\r\n            dataKey={key}\r\n            name={key}\r\n            data={data}\r\n            stroke={color}\r\n          />\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  if (props.variables.daily) {\r\n    Object.keys(props.variables.daily).forEach((key, index) => {\r\n      if (key !== \"time\") {\r\n        // Kreirajte podatke za trenutni dnevni niz\r\n        const data = props.variables.daily.time.map((time, dataIndex) => ({\r\n          x: time,\r\n          [key]: props.variables.daily[key][dataIndex],\r\n        }));\r\n\r\n        // Dodijelite boju trenutnoj dnevnoj liniji\r\n        const color = colors[(index + lines.length) % colors.length];\r\n\r\n        // Dodajte liniju za trenutni dnevni niz s određenom bojom\r\n        lines.push(\r\n          <Line\r\n            key={key}\r\n            type=\"monotone\"\r\n            dataKey={key}\r\n            name={key}\r\n            data={data}\r\n            stroke={color}\r\n          />\r\n        );\r\n      }\r\n    });\r\n  }\r\n  // Iterirajte kroz sve dostupne nizove pored niza \"time\" za dnevne podatke\r\n\r\n  return (\r\n    <div\r\n      style={{ display: \"flex\", textAlign: \"center\", marginTop: \"10px\" }}\r\n    >\r\n      <ResponsiveContainer width=\"90%\" height={500}>\r\n        <LineChart data={props.variables.hourly.time}>\r\n          <XAxis dataKey=\"x\" />\r\n          <YAxis />\r\n          <CartesianGrid stroke=\"#ccc\" />\r\n          {lines}\r\n          <Tooltip />\r\n          <Legend />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VariablesGraph;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}