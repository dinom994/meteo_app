{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adem Macic\\\\Desktop\\\\Weather app (task za agilno)\\\\meteoApp\\\\src\\\\components\\\\GraphTab.js\",\n  _s = $RefreshSig$();\nimport { useContext } from \"react\";\nimport SettingsContext from \"../store/settings-context\";\nconst API_URL = \"https://api.open-meteo.com/v1/forecast\";\nimport { useState, useEffect } from \"react\";\nimport VariablesGraph from \"../ui/VariablesGraph\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GraphTab = props => {\n  _s();\n  const [hourlyString, setHourlyString] = useState(\"\");\n  const [dailyString, setDailyString] = useState(\"\");\n  const [fetchedData, setFetchedData] = useState(null);\n  const settingsCtx = useContext(SettingsContext);\n  var temperatureString, windSpeedString, precipitationString, pastDaysString;\n  if (settingsCtx.temperature === \"celsius\") {\n    temperatureString = \"\";\n  } else {\n    temperatureString = `&temperature_unit=${settingsCtx.temperature}`;\n  }\n  if (settingsCtx.windSpeed === \"kmh\") {\n    windSpeedString = \"\";\n  } else {\n    windSpeedString = `&windspeed_unit=${settingsCtx.windSpeed}`;\n  }\n  if (settingsCtx.precipitation === \"milimeter\") {\n    precipitationString = \"\";\n  } else {\n    precipitationString = `&precipitation_unit=${settingsCtx.precipitation}`;\n  }\n  if (settingsCtx.pastDays === \"0\") {\n    pastDaysString = \"\";\n  } else {\n    pastDaysString = `&past_days=${settingsCtx.pastDays}`;\n  }\n  useEffect(() => {\n    if (props.hourlyData.length !== 0) {\n      setHourlyString(\"&hourly=\" + props.hourlyData.join(\",\"));\n    } else setHourlyString(\"\");\n  }, [props.hourlyData]);\n  useEffect(() => {\n    if (props.dailyData.length !== 0) {\n      setDailyString(\"&daily=\" + props.dailyData.join(\",\"));\n    } else setDailyString(\"\");\n  }, [props.dailyData]);\n  useEffect(() => {\n    fetch(`${API_URL}?latitude=${props.location.lat}&longitude=${props.location.lng}${hourlyString}${dailyString}${temperatureString}${windSpeedString}${precipitationString}&timezone=${settingsCtx.timeZone}${pastDaysString}`).then(response => {\n      if (!response.ok) {\n        throw new Error(\"Fetching data error\");\n      } else return response.json();\n    }).then(data => {\n      if (hourlyString.length !== 0 || dailyString.length !== 0) {\n        setFetchedData(data);\n      } else {\n        setFetchedData(null);\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  }, [hourlyString, dailyString]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!fetchedData && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Please choose hourly or daily variables for graphic representation!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 24\n    }, this), fetchedData && /*#__PURE__*/_jsxDEV(VariablesGraph, {\n      variables: fetchedData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true);\n};\n_s(GraphTab, \"ln64x/1RxqNj1FY5bPkZVLe892g=\");\n_c = GraphTab;\nexport default GraphTab;\nvar _c;\n$RefreshReg$(_c, \"GraphTab\");","map":{"version":3,"names":["useContext","SettingsContext","API_URL","useState","useEffect","VariablesGraph","GraphTab","props","hourlyString","setHourlyString","dailyString","setDailyString","fetchedData","setFetchedData","settingsCtx","temperatureString","windSpeedString","precipitationString","pastDaysString","temperature","windSpeed","precipitation","pastDays","hourlyData","length","join","dailyData","fetch","location","lat","lng","timeZone","then","response","ok","Error","json","data","catch","error","console","log"],"sources":["C:/Users/Adem Macic/Desktop/Weather app (task za agilno)/meteoApp/src/components/GraphTab.js"],"sourcesContent":["import { useContext } from \"react\";\r\nimport SettingsContext from \"../store/settings-context\";\r\nconst API_URL = \"https://api.open-meteo.com/v1/forecast\";\r\nimport { useState, useEffect } from \"react\";\r\nimport VariablesGraph from \"../ui/VariablesGraph\";\r\n\r\nconst GraphTab = (props) => {\r\n  const [hourlyString, setHourlyString] = useState(\"\");\r\n  const [dailyString, setDailyString] = useState(\"\");\r\n  const [fetchedData, setFetchedData] = useState(null);\r\n  const settingsCtx = useContext(SettingsContext);\r\n\r\n  var temperatureString, windSpeedString, precipitationString, pastDaysString;\r\n\r\n  if (settingsCtx.temperature === \"celsius\") {\r\n    temperatureString = \"\";\r\n  } else {\r\n    temperatureString = `&temperature_unit=${settingsCtx.temperature}`;\r\n  }\r\n\r\n  if (settingsCtx.windSpeed === \"kmh\") {\r\n    windSpeedString = \"\";\r\n  } else {\r\n    windSpeedString = `&windspeed_unit=${settingsCtx.windSpeed}`;\r\n  }\r\n\r\n  if (settingsCtx.precipitation === \"milimeter\") {\r\n    precipitationString = \"\";\r\n  } else {\r\n    precipitationString = `&precipitation_unit=${settingsCtx.precipitation}`;\r\n  }\r\n\r\n  if (settingsCtx.pastDays === \"0\") {\r\n    pastDaysString = \"\";\r\n  } else {\r\n    pastDaysString = `&past_days=${settingsCtx.pastDays}`;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (props.hourlyData.length !== 0) {\r\n      setHourlyString(\"&hourly=\" + props.hourlyData.join(\",\"));\r\n    } else setHourlyString(\"\");\r\n  }, [props.hourlyData]);\r\n\r\n  useEffect(() => {\r\n    if (props.dailyData.length !== 0) {\r\n      setDailyString(\"&daily=\" + props.dailyData.join(\",\"));\r\n    } else setDailyString(\"\");\r\n  }, [props.dailyData]);\r\n\r\n  useEffect(() => {\r\n    fetch(\r\n      `${API_URL}?latitude=${props.location.lat}&longitude=${props.location.lng}${hourlyString}${dailyString}${temperatureString}${windSpeedString}${precipitationString}&timezone=${settingsCtx.timeZone}${pastDaysString}`\r\n    )\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(\"Fetching data error\");\r\n        } else return response.json();\r\n      })\r\n      .then((data) => {\r\n        if (hourlyString.length !== 0 || dailyString.length !== 0) {\r\n          setFetchedData(data);\r\n        } else {\r\n          setFetchedData(null);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, [hourlyString, dailyString]);\r\n\r\n  return (\r\n    <>\r\n      {!fetchedData && <h2>Please choose hourly or daily variables for graphic representation!</h2>}\r\n      {fetchedData && <VariablesGraph variables={fetchedData} />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GraphTab;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}