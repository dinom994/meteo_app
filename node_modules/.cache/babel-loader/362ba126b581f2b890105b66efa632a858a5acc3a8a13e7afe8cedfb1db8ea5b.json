{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adem Macic\\\\Desktop\\\\Weather app (task za agilno)\\\\meteoApp\\\\src\\\\ui\\\\VariablesGraph.js\";\nimport { LineChart, XAxis, YAxis, CartesianGrid, Line, Tooltip, Legend } from \"recharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VariablesGraph = props => {\n  const lines = [];\n\n  // Generirajte 20 različitih boja koristeći HSV sustav boja\n  const colors = [];\n  for (let i = 0; i < 20; i++) {\n    const hue = i * 360 / 20; // Ravnomjerno raspoređeni tonovi\n    const saturation = 90; // Zasićenost\n    const value = 70; // Svjetlina\n    const color = `hsl(${hue}, ${saturation}%, ${value}%)`;\n    colors.push(color);\n  }\n\n  // Iterirajte kroz sve dostupne nizove pored niza \"time\"\n  Object.keys(props.variables.hourly).forEach((key, index) => {\n    if (key !== \"time\") {\n      // Kreirajte podatke za trenutni niz\n      const data = props.variables.hourly.time.map((time, dataIndex) => ({\n        x: time,\n        [key]: props.variables.hourly[key][dataIndex]\n      }));\n\n      // Dodijelite boju trenutnoj liniji\n      const color = colors[index % colors.length];\n\n      // Dodajte liniju za trenutni niz s određenom bojom\n      lines.push( /*#__PURE__*/_jsxDEV(Line, {\n        type: \"monotone\",\n        dataKey: key,\n        name: key,\n        data: data,\n        stroke: color\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this));\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      marginTop: \"10px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(LineChart, {\n      width: 1000,\n      height: 500,\n      data: props.variables.hourly.time,\n      children: [/*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n        stroke: \"#ccc\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), lines, /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_c = VariablesGraph;\nexport default VariablesGraph;\nvar _c;\n$RefreshReg$(_c, \"VariablesGraph\");","map":{"version":3,"names":["LineChart","XAxis","YAxis","CartesianGrid","Line","Tooltip","Legend","VariablesGraph","props","lines","colors","i","hue","saturation","value","color","push","Object","keys","variables","hourly","forEach","key","index","data","time","map","dataIndex","x","length","display","justifyContent","marginTop"],"sources":["C:/Users/Adem Macic/Desktop/Weather app (task za agilno)/meteoApp/src/ui/VariablesGraph.js"],"sourcesContent":["import {\r\n  LineChart,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Line,\r\n  Tooltip,\r\n  Legend,\r\n} from \"recharts\";\r\n\r\nconst VariablesGraph = (props) => {\r\n  const lines = [];\r\n\r\n  // Generirajte 20 različitih boja koristeći HSV sustav boja\r\n  const colors = [];\r\n  for (let i = 0; i < 20; i++) {\r\n    const hue = (i * 360) / 20; // Ravnomjerno raspoređeni tonovi\r\n    const saturation = 90; // Zasićenost\r\n    const value = 70; // Svjetlina\r\n    const color = `hsl(${hue}, ${saturation}%, ${value}%)`;\r\n    colors.push(color);\r\n  }\r\n\r\n  // Iterirajte kroz sve dostupne nizove pored niza \"time\"\r\n  Object.keys(props.variables.hourly).forEach((key, index) => {\r\n    if (key !== \"time\") {\r\n      // Kreirajte podatke za trenutni niz\r\n      const data = props.variables.hourly.time.map((time, dataIndex) => ({\r\n        x: time,\r\n        [key]: props.variables.hourly[key][dataIndex],\r\n      }));\r\n\r\n      // Dodijelite boju trenutnoj liniji\r\n      const color = colors[index % colors.length];\r\n\r\n      // Dodajte liniju za trenutni niz s određenom bojom\r\n      lines.push(\r\n        <Line\r\n          key={key}\r\n          type=\"monotone\"\r\n          dataKey={key}\r\n          name={key}\r\n          data={data}\r\n          stroke={color}\r\n        />\r\n      );\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div style={{ display: \"flex\", justifyContent: \"center\", marginTop: \"10px\" }}>\r\n      <LineChart width={1000} height={500} data={props.variables.hourly.time}>\r\n        <XAxis dataKey=\"x\" />\r\n        <YAxis />\r\n        <CartesianGrid stroke=\"#ccc\" />\r\n        {lines}\r\n        \r\n        <Legend />\r\n      </LineChart>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VariablesGraph;\r\n"],"mappings":";AAAA,SACEA,SAAS,EACTC,KAAK,EACLC,KAAK,EACLC,aAAa,EACbC,IAAI,EACJC,OAAO,EACPC,MAAM,QACD,UAAU;AAAC;AAElB,MAAMC,cAAc,GAAIC,KAAK,IAAK;EAChC,MAAMC,KAAK,GAAG,EAAE;;EAEhB;EACA,MAAMC,MAAM,GAAG,EAAE;EACjB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;IAC3B,MAAMC,GAAG,GAAID,CAAC,GAAG,GAAG,GAAI,EAAE,CAAC,CAAC;IAC5B,MAAME,UAAU,GAAG,EAAE,CAAC,CAAC;IACvB,MAAMC,KAAK,GAAG,EAAE,CAAC,CAAC;IAClB,MAAMC,KAAK,GAAI,OAAMH,GAAI,KAAIC,UAAW,MAAKC,KAAM,IAAG;IACtDJ,MAAM,CAACM,IAAI,CAACD,KAAK,CAAC;EACpB;;EAEA;EACAE,MAAM,CAACC,IAAI,CAACV,KAAK,CAACW,SAAS,CAACC,MAAM,CAAC,CAACC,OAAO,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAK;IAC1D,IAAID,GAAG,KAAK,MAAM,EAAE;MAClB;MACA,MAAME,IAAI,GAAGhB,KAAK,CAACW,SAAS,CAACC,MAAM,CAACK,IAAI,CAACC,GAAG,CAAC,CAACD,IAAI,EAAEE,SAAS,MAAM;QACjEC,CAAC,EAAEH,IAAI;QACP,CAACH,GAAG,GAAGd,KAAK,CAACW,SAAS,CAACC,MAAM,CAACE,GAAG,CAAC,CAACK,SAAS;MAC9C,CAAC,CAAC,CAAC;;MAEH;MACA,MAAMZ,KAAK,GAAGL,MAAM,CAACa,KAAK,GAAGb,MAAM,CAACmB,MAAM,CAAC;;MAE3C;MACApB,KAAK,CAACO,IAAI,eACR,QAAC,IAAI;QAEH,IAAI,EAAC,UAAU;QACf,OAAO,EAAEM,GAAI;QACb,IAAI,EAAEA,GAAI;QACV,IAAI,EAAEE,IAAK;QACX,MAAM,EAAET;MAAM,GALTO,GAAG;QAAA;QAAA;QAAA;MAAA,QAMR,CACH;IACH;EACF,CAAC,CAAC;EAEF,oBACE;IAAK,KAAK,EAAE;MAAEQ,OAAO,EAAE,MAAM;MAAEC,cAAc,EAAE,QAAQ;MAAEC,SAAS,EAAE;IAAO,CAAE;IAAA,uBAC3E,QAAC,SAAS;MAAC,KAAK,EAAE,IAAK;MAAC,MAAM,EAAE,GAAI;MAAC,IAAI,EAAExB,KAAK,CAACW,SAAS,CAACC,MAAM,CAACK,IAAK;MAAA,wBACrE,QAAC,KAAK;QAAC,OAAO,EAAC;MAAG;QAAA;QAAA;QAAA;MAAA,QAAG,eACrB,QAAC,KAAK;QAAA;QAAA;QAAA;MAAA,QAAG,eACT,QAAC,aAAa;QAAC,MAAM,EAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAG,EAC9BhB,KAAK,eAEN,QAAC,MAAM;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA;EACA;IAAA;IAAA;IAAA;EAAA,QACR;AAEV,CAAC;AAAC,KAnDIF,cAAc;AAqDpB,eAAeA,cAAc;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}