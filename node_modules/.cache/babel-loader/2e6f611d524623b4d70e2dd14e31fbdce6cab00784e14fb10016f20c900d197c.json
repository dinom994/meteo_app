{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adem Macic\\\\Desktop\\\\Weather app (task za agilno)\\\\meteoApp\\\\src\\\\components\\\\GraphTab.js\",\n  _s = $RefreshSig$();\nimport { useContext } from \"react\";\nimport classes from \"./GraphTab.module.css\";\nimport SettingsContext from \"../store/settings-context\";\nconst API_URL = \"https://api.open-meteo.com/v1/forecast\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GraphTab = props => {\n  _s();\n  const [hourlyString, setHourlyString] = useState(\"\");\n  const [dailyString, setDailyString] = useState(\"\");\n  const settingsCtx = useContext(SettingsContext);\n  var temperatureString, windSpeedString, precipitationString, pastDaysString;\n  if (settingsCtx.temperature === \"celsius\") {\n    temperatureString = \"\";\n  } else {\n    temperatureString = `&temperature_unit=${settingsCtx.temperature}`;\n  }\n  if (settingsCtx.windSpeed === \"kmh\") {\n    windSpeedString = \"\";\n  } else {\n    windSpeedString = `&windspeed_unit=${settingsCtx.windSpeed}`;\n  }\n  if (settingsCtx.precipitation === \"milimeter\") {\n    precipitationString = \"\";\n  } else {\n    precipitationString = `&precipitation_unit=${settingsCtx.precipitation}`;\n  }\n  if (settingsCtx.pastDays === \"0\") {\n    pastDaysString = \"\";\n  } else {\n    pastDaysString = `&past_days=${settingsCtx.pastDays}`;\n  }\n\n  // console.log(props.dailyData);\n\n  useEffect(() => {\n    if (props.hourlyData.length !== 0) {\n      setHourlyString(\"&hourly=\" + props.hourlyData.join(\",\"));\n    }\n  }, [props.hourlyData]);\n  useEffect(() => {\n    if (props.dailyData.length !== 0) {\n      setDailyString(\"&daily=\" + props.dailyData.join(\",\"));\n    }\n  }, [props.dailyData]);\n\n  /*console.log(\r\n    `${API_URL}?latitude=${props.location.lat}&longitude=${props.location.lng}${hourlyString}${dailyString}${temperatureString}${windSpeedString}${precipitationString}&timezone=${settingsCtx.timeZone}${pastDaysString}`\r\n  );*/\n\n  fetch(`${API_URL}?latitude=${props.location.lat}&longitude=${props.location.lng}${hourlyString}${dailyString}${temperatureString}${windSpeedString}${precipitationString}&timezone=${settingsCtx.timeZone}${pastDaysString}`).then(response => {\n    if (!response.ok) {\n      throw new Error(\"Fetching data error\");\n    } else return response.json();\n  }).then(data => {\n    console.log(data);\n  }).then(error => {\n    console.log(error);\n  });\n  return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"hehe\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 10\n  }, this);\n};\n_s(GraphTab, \"uVzLt1tN9Lcf1sJo+sLr+L715LE=\");\n_c = GraphTab;\nexport default GraphTab;\nvar _c;\n$RefreshReg$(_c, \"GraphTab\");","map":{"version":3,"names":["useContext","classes","SettingsContext","API_URL","useState","useEffect","GraphTab","props","hourlyString","setHourlyString","dailyString","setDailyString","settingsCtx","temperatureString","windSpeedString","precipitationString","pastDaysString","temperature","windSpeed","precipitation","pastDays","hourlyData","length","join","dailyData","fetch","location","lat","lng","timeZone","then","response","ok","Error","json","data","console","log","error"],"sources":["C:/Users/Adem Macic/Desktop/Weather app (task za agilno)/meteoApp/src/components/GraphTab.js"],"sourcesContent":["import { useContext } from \"react\";\r\nimport classes from \"./GraphTab.module.css\";\r\nimport SettingsContext from \"../store/settings-context\";\r\nconst API_URL = \"https://api.open-meteo.com/v1/forecast\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst GraphTab = (props) => {\r\n  const [hourlyString, setHourlyString] = useState(\"\");\r\n  const [dailyString, setDailyString] = useState(\"\");\r\n  const settingsCtx = useContext(SettingsContext);\r\n\r\n  var temperatureString, windSpeedString, precipitationString, pastDaysString;\r\n\r\n  if (settingsCtx.temperature === \"celsius\") {\r\n    temperatureString = \"\";\r\n  } else {\r\n    temperatureString = `&temperature_unit=${settingsCtx.temperature}`;\r\n  }\r\n\r\n  if (settingsCtx.windSpeed === \"kmh\") {\r\n    windSpeedString = \"\";\r\n  } else {\r\n    windSpeedString = `&windspeed_unit=${settingsCtx.windSpeed}`;\r\n  }\r\n\r\n  if (settingsCtx.precipitation === \"milimeter\") {\r\n    precipitationString = \"\";\r\n  } else {\r\n    precipitationString = `&precipitation_unit=${settingsCtx.precipitation}`;\r\n  }\r\n\r\n  if (settingsCtx.pastDays === \"0\") {\r\n    pastDaysString = \"\";\r\n  } else {\r\n    pastDaysString = `&past_days=${settingsCtx.pastDays}`;\r\n  }\r\n\r\n  // console.log(props.dailyData);\r\n\r\n  useEffect(() => {\r\n    if (props.hourlyData.length !== 0) {\r\n      setHourlyString(\"&hourly=\" + props.hourlyData.join(\",\"));\r\n    }\r\n  }, [props.hourlyData]);\r\n\r\n  useEffect(() => {\r\n    if (props.dailyData.length !== 0) {\r\n      setDailyString(\"&daily=\" + props.dailyData.join(\",\"));\r\n    }\r\n  }, [props.dailyData]);\r\n\r\n  /*console.log(\r\n    `${API_URL}?latitude=${props.location.lat}&longitude=${props.location.lng}${hourlyString}${dailyString}${temperatureString}${windSpeedString}${precipitationString}&timezone=${settingsCtx.timeZone}${pastDaysString}`\r\n  );*/\r\n\r\n  fetch(\r\n    `${API_URL}?latitude=${props.location.lat}&longitude=${props.location.lng}${hourlyString}${dailyString}${temperatureString}${windSpeedString}${precipitationString}&timezone=${settingsCtx.timeZone}${pastDaysString}`\r\n  )\r\n    .then((response) => {\r\n      if (!response.ok) {\r\n        throw new Error(\"Fetching data error\");\r\n      } else return response.json();\r\n    })\r\n    .then((data) => {\r\n      console.log(data);\r\n    })\r\n    .then((error) => {\r\n      console.log(error);\r\n    });\r\n  return <h2>hehe</h2>;\r\n};\r\n\r\nexport default GraphTab;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}